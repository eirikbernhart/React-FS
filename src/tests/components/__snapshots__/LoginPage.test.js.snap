// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginPage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="App-header"
        >
          <h2>
            Login
          </h2>
        </div>,
        <Form
          tag="form"
        >
          <FormGroup
            tag="div"
          >
            <Label
              for="userName"
              tag="label"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              <strong>
                Username
              </strong>
            </Label>
            <Input
              id="userName"
              name="username"
              onChange={[Function]}
              placeholder="Username..."
              tag="p"
              type="username"
              value=""
            />
          </FormGroup>
          <FormGroup
            tag="div"
          >
            <Label
              for="examplePassword"
              tag="label"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              <strong>
                Password
              </strong>
            </Label>
            <Input
              id="examplePassword"
              name="password"
              onChange={[Function]}
              placeholder="Password..."
              tag="p"
              type="password"
              value=""
            />
          </FormGroup>
          <Button
            color="danger"
            onClick={[Function]}
            tag="button"
          >
            Log in
          </Button>
        </Form>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h2>
            Login
          </h2>,
          "className": "App-header",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Login",
          },
          "ref": null,
          "rendered": "Login",
          "type": "h2",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <FormGroup
              tag="div"
            >
              <Label
                for="userName"
                tag="label"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <strong>
                  Username
                </strong>
              </Label>
              <Input
                id="userName"
                name="username"
                onChange={[Function]}
                placeholder="Username..."
                tag="p"
                type="username"
                value=""
              />
            </FormGroup>,
            <FormGroup
              tag="div"
            >
              <Label
                for="examplePassword"
                tag="label"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <strong>
                  Password
                </strong>
              </Label>
              <Input
                id="examplePassword"
                name="password"
                onChange={[Function]}
                placeholder="Password..."
                tag="p"
                type="password"
                value=""
              />
            </FormGroup>,
            <Button
              color="danger"
              onClick={[Function]}
              tag="button"
            >
              Log in
            </Button>,
          ],
          "tag": "form",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Label
                  for="userName"
                  tag="label"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <strong>
                    Username
                  </strong>
                </Label>,
                <Input
                  id="userName"
                  name="username"
                  onChange={[Function]}
                  placeholder="Username..."
                  tag="p"
                  type="username"
                  value=""
                />,
              ],
              "tag": "div",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <strong>
                    Username
                  </strong>,
                  "for": "userName",
                  "tag": "label",
                  "widths": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Username",
                  },
                  "ref": null,
                  "rendered": "Username",
                  "type": "strong",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "id": "userName",
                  "name": "username",
                  "onChange": [Function],
                  "placeholder": "Username...",
                  "tag": "p",
                  "type": "username",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Label
                  for="examplePassword"
                  tag="label"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <strong>
                    Password
                  </strong>
                </Label>,
                <Input
                  id="examplePassword"
                  name="password"
                  onChange={[Function]}
                  placeholder="Password..."
                  tag="p"
                  type="password"
                  value=""
                />,
              ],
              "tag": "div",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <strong>
                    Password
                  </strong>,
                  "for": "examplePassword",
                  "tag": "label",
                  "widths": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Password",
                  },
                  "ref": null,
                  "rendered": "Password",
                  "type": "strong",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "id": "examplePassword",
                  "name": "password",
                  "onChange": [Function],
                  "placeholder": "Password...",
                  "tag": "p",
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Log in",
              "color": "danger",
              "onClick": [Function],
              "tag": "button",
            },
            "ref": null,
            "rendered": "Log in",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="App-header"
          >
            <h2>
              Login
            </h2>
          </div>,
          <Form
            tag="form"
          >
            <FormGroup
              tag="div"
            >
              <Label
                for="userName"
                tag="label"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <strong>
                  Username
                </strong>
              </Label>
              <Input
                id="userName"
                name="username"
                onChange={[Function]}
                placeholder="Username..."
                tag="p"
                type="username"
                value=""
              />
            </FormGroup>
            <FormGroup
              tag="div"
            >
              <Label
                for="examplePassword"
                tag="label"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <strong>
                  Password
                </strong>
              </Label>
              <Input
                id="examplePassword"
                name="password"
                onChange={[Function]}
                placeholder="Password..."
                tag="p"
                type="password"
                value=""
              />
            </FormGroup>
            <Button
              color="danger"
              onClick={[Function]}
              tag="button"
            >
              Log in
            </Button>
          </Form>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h2>
              Login
            </h2>,
            "className": "App-header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Login",
            },
            "ref": null,
            "rendered": "Login",
            "type": "h2",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <FormGroup
                tag="div"
              >
                <Label
                  for="userName"
                  tag="label"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <strong>
                    Username
                  </strong>
                </Label>
                <Input
                  id="userName"
                  name="username"
                  onChange={[Function]}
                  placeholder="Username..."
                  tag="p"
                  type="username"
                  value=""
                />
              </FormGroup>,
              <FormGroup
                tag="div"
              >
                <Label
                  for="examplePassword"
                  tag="label"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <strong>
                    Password
                  </strong>
                </Label>
                <Input
                  id="examplePassword"
                  name="password"
                  onChange={[Function]}
                  placeholder="Password..."
                  tag="p"
                  type="password"
                  value=""
                />
              </FormGroup>,
              <Button
                color="danger"
                onClick={[Function]}
                tag="button"
              >
                Log in
              </Button>,
            ],
            "tag": "form",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Label
                    for="userName"
                    tag="label"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                  >
                    <strong>
                      Username
                    </strong>
                  </Label>,
                  <Input
                    id="userName"
                    name="username"
                    onChange={[Function]}
                    placeholder="Username..."
                    tag="p"
                    type="username"
                    value=""
                  />,
                ],
                "tag": "div",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <strong>
                      Username
                    </strong>,
                    "for": "userName",
                    "tag": "label",
                    "widths": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Username",
                    },
                    "ref": null,
                    "rendered": "Username",
                    "type": "strong",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "id": "userName",
                    "name": "username",
                    "onChange": [Function],
                    "placeholder": "Username...",
                    "tag": "p",
                    "type": "username",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Label
                    for="examplePassword"
                    tag="label"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                  >
                    <strong>
                      Password
                    </strong>
                  </Label>,
                  <Input
                    id="examplePassword"
                    name="password"
                    onChange={[Function]}
                    placeholder="Password..."
                    tag="p"
                    type="password"
                    value=""
                  />,
                ],
                "tag": "div",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <strong>
                      Password
                    </strong>,
                    "for": "examplePassword",
                    "tag": "label",
                    "widths": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Password",
                    },
                    "ref": null,
                    "rendered": "Password",
                    "type": "strong",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "id": "examplePassword",
                    "name": "password",
                    "onChange": [Function],
                    "placeholder": "Password...",
                    "tag": "p",
                    "type": "password",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Log in",
                "color": "danger",
                "onClick": [Function],
                "tag": "button",
              },
              "ref": null,
              "rendered": "Log in",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
